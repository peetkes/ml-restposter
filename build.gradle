apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'distribution'

sourceCompatibility = 1.8
version = '1.8'

repositories {
    mavenCentral()
    mavenLocal()
  	maven { url "http://repo.maven.apache.org/maven2"}
    maven { url "http://developer.marklogic.com/maven2" }
    maven { url "http://download.java.net/maven/2/" }
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.1'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
    compile group: 'org.apache.httpcomponents', name: 'httpclient-cache', version: '4.3.6'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.6'
    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.3.6'
  	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2'
  	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.4'
  	compile group: 'com.marklogic', name: 'client-api-java', version: '2.0-1'
  	compile group: 'org.freemarker', name: 'freemarker', version: '2.3.14'
  	compile group: 'xerces', name: 'xercesImpl', version:'2.8.0'
  	compile group: 'com.googlecode.json-simple', name: 'json-simple', version:'1.1'
  	compile 'com.google.guava:guava:11.0.2'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

jar {
    manifest {
        attributes 'Implementation-Title': 'ml-restposter', 'Implementation-Version': version
        attributes 'Main-Class': 'com.marklogic.rest.RestPoster'
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
    attributes 'Implementation-Title': 'ml-restposter', 'Implementation-Version': version
    attributes 'Main-Class': 'com.marklogic.rest.RestPoster'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task writeClasspath << {
    buildDir.mkdirs()
    new File(buildDir, "classpath.txt").text = configurations.runtime.asPath + "\n"
}
